/*
 *  @ Danile Rakovský
$RequestHeader set AuditDate expr=%{TIME_YEAR}-%{TIME_MON}-%{TIME_DAY}
$RequestHeader set AuditDateTime expr=%{TIME}
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example.gui;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.example.Event;

import static java.lang.Math.round;
import static org.example.Creature.fight;
import static org.example.Creature.pickUpItems;
import static org.example.Main.*;
import static org.example.tools.GameGenerator.currentPlayer;
import static org.example.tools.SerTool.saveLore;

/**
 *
 * @author Daniel
 */
public class PlayFrame extends javax.swing.JFrame {

    static String currentMessage;

    public void setFrameFightDecision(){
        currentMessage = currentEvent.message;

        messageTextArea.setText(currentMessage);
        String type = currentEvent.typeOfEventVar.toString();
        if(currentEvent.typeOfEventVar.toString().equals("FIGHT")){

            updateStats();

            yesButton.setVisible(true);
            noButton.setVisible(true);

            attackButton.setVisible(false);
            runButton.setVisible(false);
            leftButton.setVisible(false);;
            rightButton.setVisible(false);

        }
    }

    public void updateStats(){
        healthNPCLabel.setVisible(true);
        healthNPCLabel1.setVisible(true);
        healthNPCLabel1.setText(String.valueOf(currentEvent.creature.hP));
        nameNPCLabel1.setText(currentEvent.creature.name);
        nameNPCLabel1.setVisible(true);


        healthLabel1.setText(String.valueOf(currentPlayer.hP));
        if(currentPlayer.equipedWeapon != null){
            weaponLabel1.setText(currentPlayer.equipedWeapon.nameOfWeapon + " +"
                    + currentPlayer.equipedWeapon.extraAttackPoints + " DMG");
        }
        else{
            weaponLabel1.setText("NONE");
        }
        nameLabel1.setText(currentPlayer.name);
    }
    public void setFrameFight(){

        messageTextArea.setText(fight(currentPlayer,currentEvent.creature));
        String type = currentEvent.typeOfEventVar.toString();
        if(currentEvent.typeOfEventVar.toString().equals("FIGHT")){
            updateStats();

            yesButton.setVisible(false);
            noButton.setVisible(false);

            attackButton.setVisible(true);
            runButton.setVisible(true);
            leftButton.setVisible(false);;
            rightButton.setVisible(false);

        }
    }
    public void setFrameGoSomewhere(){


        messageTextArea.setText(messageTextArea.getText().concat("\n Where do you want to go next?"));

            yesButton.setVisible(false);
            noButton.setVisible(false);

            attackButton.setVisible(false);
            runButton.setVisible(false);
            leftButton.setVisible(true);;
            rightButton.setVisible(true);


    }
    public void updateMessage(){
        currentMessage = currentEvent.message;
        messageTextArea.setText(currentMessage);
    }

    public void checkAndSetFrame(Event event){
        if(event.typeOfEventVar.equals(Event.TypeOfEvent.FIGHT)){
            setFrameFightDecision();
        }
        if(event.typeOfEventVar.equals(Event.TypeOfEvent.REST)){
            setFrameGoSomewhere();
        }
        if(event.typeOfEventVar.equals(Event.TypeOfEvent.FIND)){
            System.out.println("NEED TO IMPLEMENT");
        }
    }

    public static void goRandomDirection(){
        int random = (int) round(dice.nextDouble() * 10);
        int indexCurrentEvent = currentLore.eventArrayList.indexOf(currentEvent);
        int sizeOfArray = currentLore.eventArrayList.size();
        int indexNextEvent;
        if(random < 5){
            if(currentEvent.isOnBeginningOfArray()){
                currentEvent = currentLore.eventArrayList.get(sizeOfArray - 1);
                System.out.println(currentEvent.positionInLoreArray);
            }
            else {
                currentEvent = currentLore.eventArrayList.get(indexCurrentEvent - 1);
                System.out.println(currentEvent.positionInLoreArray);
            }
        }
        else {
            if(currentEvent.isOnEndOfArray()){
                currentEvent = currentLore.eventArrayList.get(0);
                System.out.println(currentEvent.positionInLoreArray);
            }
            else {
                currentEvent = currentLore.eventArrayList.get(indexCurrentEvent + 1);
                System.out.println(currentEvent.positionInLoreArray);
            }
        }
    }


    /**
     * Creates new form PlayFrame
     */
    public PlayFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        messageTextArea = new javax.swing.JTextArea();
        nameLabel = new javax.swing.JLabel();
        healthLabel = new javax.swing.JLabel();
        weaponLabel = new javax.swing.JLabel();
        healthLabel1 = new javax.swing.JLabel();
        weaponLabel1 = new javax.swing.JLabel();
        nameLabel1 = new javax.swing.JLabel();
        healthNPCLabel = new javax.swing.JLabel();
        healthNPCLabel1 = new javax.swing.JLabel();
        nameNPCLabel1 = new javax.swing.JLabel();
        nameNPCLabel = new javax.swing.JLabel();
        yesButton = new javax.swing.JButton();
        noButton = new javax.swing.JButton();
        attackButton = new javax.swing.JButton();
        runButton = new javax.swing.JButton();
        leftButton = new javax.swing.JButton();
        rightButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        messageTextArea.setEditable(false);
        messageTextArea.setColumns(20);
        messageTextArea.setRows(5);
        messageTextArea.setText("Tady bude nějaká zpráva\ndalší řádke\nss\nssssssssssssssssssssssssssssssssssssssssssssssssssssss\nss\ns\ns\ns\n\ns\nsssssssssssssss\n\n\n\nssss");
        jScrollPane1.setViewportView(messageTextArea);

        nameLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        nameLabel.setText("Name");

        healthLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        healthLabel.setText("Health");

        weaponLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        weaponLabel.setText("Weapon");

        healthLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        healthLabel1.setText("Health");

        weaponLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        weaponLabel1.setText("Weapon");

        nameLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        nameLabel1.setText("Name");

        healthNPCLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        healthNPCLabel.setText("Health");

        healthNPCLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        healthNPCLabel1.setText("Health");

        nameNPCLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        nameNPCLabel1.setText("Name");

        nameNPCLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        nameNPCLabel.setText("Name");

        yesButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        yesButton.setText("YES");
        yesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesButtonActionPerformed(evt);
            }
        });

        noButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        noButton.setText("NO");
        noButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noButtonActionPerformed(evt);
            }
        });

        attackButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        attackButton.setText("ATTACK");
        attackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackButtonActionPerformed(evt);
            }
        });

        runButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        runButton.setText("RUN");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        leftButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        leftButton.setText("LEFT");
        leftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftButtonActionPerformed(evt);
            }
        });

        rightButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rightButton.setText("RIGHT");
        rightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightButtonActionPerformed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        saveButton.setText("SAVE");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(296, 296, 296)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(274, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nameNPCLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(healthNPCLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameNPCLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(healthNPCLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(yesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(noButton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(attackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(leftButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(weaponLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(healthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(nameLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(healthLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(weaponLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(healthLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(weaponLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(healthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(weaponLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nameNPCLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(healthNPCLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nameNPCLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(healthNPCLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(yesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(noButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(attackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(leftButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(65, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void yesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesButtonActionPerformed
        // TODO add your handling code here:
        setFrameFight();
    }//GEN-LAST:event_yesButtonActionPerformed

    private void noButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noButtonActionPerformed
        // TODO add your handling code here:
        goRandomDirection();
        checkAndSetFrame(currentEvent);
        updateMessage();

    }//GEN-LAST:event_noButtonActionPerformed

    private void attackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackButtonActionPerformed
        // TODO add your handling code here:
        messageTextArea.setText(fight(currentPlayer,currentEvent.creature));
        updateStats();
        if(currentEvent.creature.isDead){
            messageTextArea.setText(messageTextArea.getText().concat("\n" + pickUpItems(currentPlayer,currentEvent.creature)));
            setFrameGoSomewhere();
        }
    }//GEN-LAST:event_attackButtonActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        // TODO add your handling code here:
        goRandomDirection();
        checkAndSetFrame(currentEvent);
        updateMessage();

    }//GEN-LAST:event_runButtonActionPerformed

    private void leftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftButtonActionPerformed
        // TODO add your handling code here:
        int currentIndexOfEvent = currentLore.eventArrayList.indexOf(currentEvent);
        if(currentIndexOfEvent == 0){
            currentEvent = currentLore.eventArrayList.get((currentLore.eventArrayList.size()-1));
        }
        else {
            currentEvent = currentLore.eventArrayList.get(currentIndexOfEvent - 1);
        }
        checkAndSetFrame(currentEvent);
        updateMessage();

        System.out.println("Current index:" + currentLore.eventArrayList.indexOf(currentEvent));
    }//GEN-LAST:event_leftButtonActionPerformed

    private void rightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightButtonActionPerformed
        // TODO add your handling code here:
        int currentIndexOfEvent = currentLore.eventArrayList.indexOf(currentEvent);

        if(currentIndexOfEvent < currentLore.eventArrayList.size() - 1){
            currentEvent = currentLore.eventArrayList.get(currentIndexOfEvent + 1);
        }
        else {
            currentEvent = currentLore.eventArrayList.get(0);
        }
        checkAndSetFrame(currentEvent);

        updateMessage();
        System.out.println("Current index:" + currentLore.eventArrayList.indexOf(currentEvent));
    }//GEN-LAST:event_rightButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            // TODO add your handling code here:
            saveLore(currentLore);
        } catch (IOException ex) {
            Logger.getLogger(PlayFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton attackButton;
    private javax.swing.JLabel healthLabel;
    private javax.swing.JLabel healthLabel1;
    private javax.swing.JLabel healthNPCLabel;
    private javax.swing.JLabel healthNPCLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton leftButton;
    private javax.swing.JTextArea messageTextArea;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nameLabel1;
    private javax.swing.JLabel nameNPCLabel;
    private javax.swing.JLabel nameNPCLabel1;
    private javax.swing.JButton noButton;
    private javax.swing.JButton rightButton;
    private javax.swing.JButton runButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel weaponLabel;
    private javax.swing.JLabel weaponLabel1;
    private javax.swing.JButton yesButton;
    // End of variables declaration//GEN-END:variables
}
